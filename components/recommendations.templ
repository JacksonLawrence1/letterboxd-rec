package components

import (
	"letterboxd-rec/utils"
)

templ Recommendations(movies []utils.Movie, isFull bool) {
	<div id="recommendations">
		<div class="mt-4 grid gap-6 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4">
			for _, movie := range movies {
				<div class="rounded-lg border p-4 shadow-sm">
					<div class="flex items-start">
						<a class="mr-4 flex-shrink-0" href={ templ.URL("https://letterboxd.com/film/" + movie.Slug) } target="_blank">
							<img
								src={ string("https://image.tmdb.org/t/p/w500" + movie.Poster_path) }
								width="100"
								height="150"
								class="rounded-sm object-cover border-2 hover:border-green-500 transition duration-200 ease-in-out"
								alt={ string("Poster for " + movie.Title) }
							/>
						</a>
						<div class="flex flex-col gap-2">
							<h3 class="text-gray-500">{ movie.Title }</h3>
							<p class="-mt-2 text-sm text-gray-400 underline underline-offset-2">{ movie.Release_date }</p>
							<p class="text-sm text-gray-500">Directed by: $$TODO$$</p>
							<ul class="flex gap-2">
								<div class="rounded-lg bg-gray-600">
									<li class="text-xs px-2 py-1 text-white">Test Genre</li>
								</div>
							</ul>
						</div>
					</div>
				</div>
			}
		</div>
		<div class="flex items-center justify-center mt-4">
			if isFull {
				<p class="text-sml text-gray-500">End of List</p>
			} else {
				@Button("", templ.Attributes{"hx-post": "loadMore", "hx-target": "#recommendations", "hx-swap": "outerHTML"}) {
					Load More
				}
			}
		</div>
	</div>
}

templ RecommendationPanel(search *utils.MovieData, movies []utils.Movie) {
	<div class="flex flex-col gap-4" id="movies">
		<h2 class="text-3xl font-bold tracking-tight">Movie Recommendations</h2>
		<p class="text-gray-500">Based on the movie { search.Movie.Title }, you might like:</p>
		@Recommendations(movies, search.IsFull())
	</div>
}
