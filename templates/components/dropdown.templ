package components

import (
	"fmt"
	"letterboxd-rec/utils"
)

templ ErrorLabel(maxUserErrorMessage string, threadsErrorMessage string) {
	<label id="max-user-error" hx-swap-oob="true" class="text-red-500">{ maxUserErrorMessage }</label>
	<label id="threads-error" hx-swap-oob="true" class="text-red-500">{ threadsErrorMessage }</label>
}

templ OpenDropdown() {
	@Button(templ.Attributes{"id": "options", "hx-swap-oob": "true", "hx-target": "#dropdown", "hx-post": "/close-dropdown", "hx-swap": "outerHTML swap:500ms"}, "") {
		<div class="flex gap-3 items-center">
			<img class="w-5 h-5" src="/assets/images/settings.svg" alt="Settings Icon"/>
			Options
		</div>
	}
	<div id="dropdown" class="dropdown absolute right-0 bg-background-dark right px-0 z-10 mt-2 rounded-lg text-sm uppercase text-right">
		<form class="flex flex-col p-4 gap-4">
			<div class="flex flex-col gap-1 ">
				<label>Max Users</label>
				<input name="maxUsers" type="number" min="5" max="5000" value={ fmt.Sprintf("%d", utils.MaxUsers) } dir="rtl" class="settings text-right rounded-md bg-inp-color border-b border-border-color px-3 py-2 focus:bg-white focus:text-color-dark focus-visible:outline-border-color focus-visible:outline-double"/>
				<label id="max-user-error" class="text-red-500"></label>
			</div>
			<div class="flex flex-col gap-1">
				<label>Threads</label>
				<input name="threads" type="number" min="1" max="32" value={ fmt.Sprintf("%d", utils.Threads ) } dir="rtl" class="settings text-right rounded-md bg-inp-color border-b border-border-color px-3 py-2 pr-2 focus:bg-white focus:text-color-dark focus-visible:outline-border-color focus-visible:outline-double"/>
				<label id="threads-error" class="text-red-500"></label>
			</div>
			<div class="flex gap-2">

			@Button(templ.Attributes{"hx-swap": "none swap:500ms", "hx-put": "/update-settings"}, "w-full") {
				Set
			}

			@Button(templ.Attributes{"hx-post": "/close-dropdown", "hx-target": "#dropdown", "hx-swap": "outerHTML swap:500ms"}, "w-full bg-red-600 enabled:hover:bg-red-700") {
				Close
			}
			</div>
		</form>
	</div>
}

templ CloseDropdown() {
	@Button(templ.Attributes{"id": "options", "hx-swap-oob": "true", "hx-post": "/open-dropdown", "hx-target": "#dropdown", "hx-swap": "outerHTML"}, "") {
		<div class="flex gap-3 items-center">
			<img class="w-5 h-5" src="/assets/images/settings.svg" alt="Settings Icon"/>
			Options
		</div>
	}
	<div id="dropdown"></div>
}
